
procedure errorsys

	lldesarrollo=(_vfp.startmode()#4)
	LOCAL aFoxErr,nTotErr
	DIMENSION aFoxErr[1]
	nTotErr = AERROR(aFoxErr)
	nError  = AfoxErr[1,1]	
	
		DO CASE
			CASE nError=1938                  && no parent
				RETURN
			CASE nError=2059      	      &&  corta estructura endtry
				RETURN               		      		
			CASE nToterr>0 AND nError = 1420  && Corrupt Ole object in General field.
				Mensaje_error(nError)
				RETURN
			CASE nToterr>0 AND nError = 1429  && error conexion ADO
			        =Mensaje_error(nError)
			        lcmensaje = 'Error de conexiÛn a la Base de Datos Seleccionada'+CHR(13)+;
			                    'Consulte a su Administrador de Sistemas'
			        =Oavisar.usuario(lcmensaje,0)
			       IF !lldesarrollo 
			           QUIT 
			       ELSE
			          CANCEL all
			          CLEAR ALL 
			       ENDIF    
			CASE nError=1115  && error GETCURSORADAPTER en obtenercursor, cuando el alias es cursor vfp
			     RETURN 			        
			CASE nError=1426  && error com cuando uso excel
			     GO BOTTOM IN ALIAS()
			     RETURN 
			CASE nError = 5                   && record out of range
 				if !eof()
  			          go bott
				    skip
 			      endif
				RETURN
			CASE nError = 4                   && fin de archivo
  				go bott
				return     		
			CASE nError = 1884     		  && Uniqueness ID error
			*	IF CURSORGETPROP("buffering")=1
			*		MESSAGEBOX(ERR_UNIQUEKEY_LOC)
			*		RETURN
			*	ENDIF
			*	IF MESSAGEBOX(ERR_UNIQUEKEY_LOC+" "+ERR_UNIQUEKEY2_LOC,36)=6
			*		TABLEREVERT(.T.)
			*	ENDIF
				RETURN
			CASE nError = 12 OR nError = 13    		  && variable no found
 				=Mensaje_error(nError)
			       IF !lldesarrollo 
			           QUIT 
			       ELSE
			          CANCEL all
			          CLEAR ALL 
			       ENDIF    
			CASE nError = 2203  && recursos insuficiente
				Mensaje_error(nError)
				RETURN	
			CASE nError=2065
				GRABAR_SEC(MESSAGE(),"Error2065.txt","TempError")
				RETURN 		       
			OTHERWISE	
				=Mensaje_error(nError)
				CLEAR CLASSLIB onegocioslocal
				RETURN	
		ENDCASE
RETURN 

function Mensaje_error(nError)
	LOCAL lclocalprogram,lcmensaje,gnx

	lcmensaje ="Error n∫: "+STR(nError)+CHR(13);
	+'Error '+MESSAGE()+ CHR(13)+'Linea n∫ '+MESSAGE(1) +chr(13)+' Alias '+alias()+' registro '+str(recno())+chr(13);
	+'Control activo '+sys(18) 

	lclocalprogram = PROGRAM(1) &&""
	lcmensaje = lcmensaje +" "+ lclocalprogram
	*=Oavisar.usuario(lcmensaje,0)
    Grabar_log(lcmensaje)
    
    Do Form frmerror Name oform Linked With nError,lcmensaje,lclocalprogram To luvalorbuscado

	uvalorbuscado=luvalorbuscado
	Release oform

	If uvalorbuscado=1 && Aceptar
	   return
		*Return To Master
	Else && cancelar	  
	    && me fijo si hay una transaccion abierta
	    
		If Txnlevel()>0
			If !'NATIVE'$LcDataSourceType 
				If LcDataSourceType="ADO" 
					DO CASE 
					CASE Vartype(Oca)="O"
						Oca.Datasource.ActiveConnection.rollbacktrans()
					CASE VARTYPE(oCadapter)="O"
						 oCadapter.Datasource.ActiveConnection.rollbacktrans()
					ENDCASE 
				Else
					lnOkSql =Sqlrollback(lnConectorODBC)
				Endif
			Endif
			Rollback
		Endif
		
		local llFormActivo
		llFormActivo=type('application.activeform')='O'
		if llFormActivo
			application.ActiveForm.Unload()
			
		ENDIF
		Do Form frmlogout 
	ENDIF

RETURN

*-- Ejemplo de Uso de Interface COM con Web Services AFIP (PyAfipWs)
*-- Factura Electronica mercado interno RG2485 Version 1 
*-- para Visual FoxPro 5.0 o superior (vfp5, vfp9.0)
*-- Seg√∫n RG2485/08 y RG2904/10 Art. 4 Opci√≥n B (sin detalle, CAE tradicional)
*-- 2010 (C) Mariano Reingart <reingart@gmail.com>

*-- Procedimiento para manejar errores WSAA
PROCEDURE errhand1
	*--PARAMETER merror, mess, mess1, mprog, mlineno
	LOCAL cError
	cError = ""
	cError	= cError + WSAA.Excepcion + CHR(13)
	cError	= cError + WSAA.Traceback + CHR(13)
	*--? WSAA.XmlRequest
	*--? WSAA.XmlResponse

	*-- trato de extraer el c√≥digo de error de afip (1000)
	afiperr = ERROR() -2147221504 
	if afiperr>1000 and afiperr<2000 then
		cError	= cError + 'codigo error afip:' + STR(afiperr) + CHR(13)
	else
		afiperr = 0
	endif
	cError	= cError + 'Error number: ' + LTRIM(STR(ERROR())) + CHR(13)
	cError	= cError + 'Error message: ' + MESSAGE() + CHR(13)
	cError	= cError + 'Line of code with error: ' + MESSAGE(1) + CHR(13)
	cError	= cError + 'Line number of error: ' + LTRIM(STR(LINENO())) + CHR(13)
	cError	= cError + 'Program with error: ' + PROGRAM() + CHR(13)
	
	=Grabar_SEC(cError,"Log_ErrorFAC.txt","Aplicaciones\Temporal")
	*-- Preguntar: Aceptar o cancelar?
	ch = MESSAGEBOX(WSAA.Excepcion, 5 + 48, "Error: " + cErro)
	IF ch = 2 && Cancelar
		ON ERROR 
		CLEAR EVENTS
		CLOSE ALL
		RELEASE ALL
		CLEAR ALL
		CANCEL
	ENDIF	
ENDPROC

*-- Procedimiento para manejar errores WSFE
PROCEDURE errhand2
	*--PARAMETER merror, mess, mess1, mprog, mlineno
	LOCAL cError
	cError = ""
	
	cError	= cError + WSFE.Excepcion + CHR(13)
	cError	= cError + WSFE.Traceback + CHR(13)
	*--? WSFE.XmlRequest
	*--? WSFE.XmlResponse
		
	cError	= cError + 'Error number: ' + LTRIM(STR(ERROR())) + CHR(13)
	cError	= cError + 'Error message: ' + MESSAGE() + CHR(13)
	cError	= cError + 'Line of code with error: ' + MESSAGE(1) + CHR(13)
	cError	= cError + 'Line number of error: ' + LTRIM(STR(LINENO())) + CHR(13)
	cError	= cError + 'Program with error: ' + PROGRAM() + CHR(13)
	
	=Grabar_SEC(cError,"Log_ErrorFAC.txt","Aplicaciones\Temporal")
	
	*-- Preguntar: Aceptar o cancelar?
	ch = MESSAGEBOX(WSFE.Excepcion, 5 + 48, "Error " + cError)
	IF ch = 2 && Cancelar
		ON ERROR 
		CLEAR EVENTS
		CLOSE ALL
		RELEASE ALL
		CLEAR ALL
		CANCEL
	ENDIF	
ENDPROC

